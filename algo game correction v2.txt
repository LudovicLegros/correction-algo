1--Nombre myst√®re--

VARIABLES
	nombreMystere EST_DU_TYPE NOMBRE
	nombreUtilisateur EST_DU_TYPE NOMBRE
	tour EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	//g√©n√©ration d'un nombre al√©atoire
	nombreMystere PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,100)
	//on boucle tant que le nombre myst√®re est diff√©rent de celui entr√©
	TANT_QUE (nombreUtilisateur!=nombreMystere) FAIRE
		DEBUT_TANT_QUE
		//On compte les tours en gardant dans une variable
		tour PREND_LA_VALEUR tour+1
		LIRE nombreUtilisateur
		SI (nombreMystere<nombreUtilisateur) ALORS
			DEBUT_SI
			AFFICHER "Le nombre myst√®re est plus petit"
			FIN_SI
		SI (nombreMystere>nombreUtilisateur) ALORS
			DEBUT_SI
			AFFICHER "Le nombre myst√®re est plus grand"
			FIN_SI
		SI (nombreMystere==nombreUtilisateur) ALORS
			DEBUT_SI
			AFFICHER* "BRAVO !!"
			AFFICHER "Vous avez trouv√© le nombre myst√®re en "
			AFFICHER tour
			AFFICHER* " essais"
			FIN_SI
		FIN_TANT_QUE
FIN_ALGORITHME


2- Pierre feuille ciseaux
FONCTIONS_UTILISEES

VARIABLES
	//la variable pour le choix num√©rique joueur
	choix EST_DU_TYPE NOMBRE
	//la variable pour le choix num√©rique al√©atoire ia
	ia EST_DU_TYPE NOMBRE
	//variable pour activer la fin de jeux (de boucle)
	fingame EST_DU_TYPE NOMBRE
	choixIa EST_DU_TYPE CHAINE
	choixJoueur EST_DU_TYPE CHAINE
DEBUT_ALGORITHME
	AFFICHER* "choisissez un nombre :"
	AFFICHER* "1-Pierre"
	AFFICHER* "2-Feuille"
	AFFICHER* "3-Ciseaux"
	TANT_QUE (fingame==0) FAIRE
		DEBUT_TANT_QUE
		//G√©n√©ration d'un choix al√©atoire
		ia PREND_LA_VALEUR random()*(3-1)+1
		ia PREND_LA_VALEUR round(ia)
		SI (ia==1) ALORS
			DEBUT_SI
			choixIa PREND_LA_VALEUR "Pierre ü™®"
			FIN_SI
		SI (ia==2) ALORS
			DEBUT_SI
			choixIa PREND_LA_VALEUR "Feuille üçÇ"
			FIN_SI
		SI (ia==3) ALORS
			DEBUT_SI
			choixIa PREND_LA_VALEUR "Ciseaux ‚úÇÔ∏è"
			FIN_SI
		LIRE choix
		SI (choix==1) ALORS
			DEBUT_SI
			choixJoueur PREND_LA_VALEUR "Pierre ü™®"
			FIN_SI
		SI (choix==2) ALORS
			DEBUT_SI
			choixJoueur PREND_LA_VALEUR "Feuille üçÇ"
			FIN_SI
		SI (choix==3) ALORS
			DEBUT_SI
			choixJoueur PREND_LA_VALEUR "Ciseaux ‚úÇÔ∏è"
			FIN_SI
		SI (choix==ia) ALORS
			DEBUT_SI
			AFFICHER "Ia a choisi "+choixIa
			AFFICHER* choixIa
			AFFICHER "Vous avez choisi "+choixJoueur
			AFFICHER* choixJoueur
			AFFICHER* "Match null, on recommence"
			FIN_SI
		SI (choix==1&ia==2 OU choix==2&ia==3 OU choix==3&ia==1) ALORS
			DEBUT_SI
			AFFICHER "Ia a choisi "
			AFFICHER* choixIa
			AFFICHER "Vous avez choisi "
			AFFICHER* choixJoueur
			AFFICHER* "Vous avez perdu"
			fingame PREND_LA_VALEUR 1
			FIN_SI
		SI (choix==1&ia==3 OU choix==2&ia==1 OU choix==3&ia==2) ALORS
			DEBUT_SI
			AFFICHER "Ia a choisi "
			AFFICHER* choixIa
			AFFICHER "Vous avez choisi "
			AFFICHER* choixJoueur
			AFFICHER "Vous avez Gagn√©!"
			fingame PREND_LA_VALEUR 1
			FIN_SI
		FIN_TANT_QUE
FIN_ALGORITHME


3-Batonnet
FONCTIONS_UTILISEES

VARIABLES
	nbBatons EST_DU_TYPE NOMBRE
	batonsRestant EST_DU_TYPE NOMBRE
	batonsActuel EST_DU_TYPE NOMBRE
	joueur EST_DU_TYPE NOMBRE
	tour EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	tour PREND_LA_VALEUR 1
	batonsActuel PREND_LA_VALEUR 16
	//Affichage des batons
	POUR nbBatons ALLANT_DE 1 A batonsActuel
		DEBUT_POUR
		AFFICHER "|"
		FIN_POUR
	//Definition de la fin de partie
	TANT_QUE (batonsActuel>0) FAIRE
		DEBUT_TANT_QUE
		//D√©finition des tours des joueurs
		SI (tour%2==0) ALORS
			DEBUT_SI 
			AFFICHER* " "
			AFFICHER* " "
			AFFICHER* "Tour du Joueur 2"
			FIN_SI
			SINON
				DEBUT_SINON
				AFFICHER* " "
				AFFICHER* " "
				AFFICHER* "Tour du Joueur 1"
				FIN_SINON
		AFFICHER* " "
		AFFICHER* "Retirez 1, 2 ou 3 baton"
		LIRE joueur
		//D√©finition des erreurs de choix
		SI (joueur>3 OU joueur<1) ALORS
			DEBUT_SI
			AFFICHER* "vous devez choisir 1,2 ou 3"
			FIN_SI
			SINON
				DEBUT_SINON
				//Affichage des batons apr√®s retrait
				batonsActuel PREND_LA_VALEUR batonsActuel-joueur
				POUR batonsRestant ALLANT_DE 1 A batonsActuel
					DEBUT_POUR
					AFFICHER "|"
					FIN_POUR
				FIN_SINON
		tour PREND_LA_VALEUR tour+1
		FIN_TANT_QUE
	//V√©rification du perdant
	SI (tour%2!=0) ALORS
		DEBUT_SI
		AFFICHER* "Le joueur 2 a perdu"
		FIN_SI
		SINON
			DEBUT_SINON
			AFFICHER* "Le joueur 1 a perdu"
			FIN_SINON
FIN_ALGORITHME


4-Simulateur de Pokemon

VARIABLES
	choixMenu EST_DU_TYPE NOMBRE
	stop EST_DU_TYPE NOMBRE
	capture EST_DU_TYPE NOMBRE
	choixAction EST_DU_TYPE NOMBRE
	pokeballChance EST_DU_TYPE NOMBRE
	playerPokemon EST_DU_TYPE CHAINE
	playerPokemonSpecialAttack EST_DU_TYPE CHAINE
	playerPokemonSpecialAttackDmg EST_DU_TYPE NOMBRE
	playerPokemonNormalAttack EST_DU_TYPE CHAINE
	playerPokemonNormalAttackDmg EST_DU_TYPE NOMBRE
	wildPokemonChoice EST_DU_TYPE NOMBRE
	wildPokemon EST_DU_TYPE CHAINE
	wildPokemonPv EST_DU_TYPE NOMBRE
	wildPokemonPvCurrent EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	playerPokemon PREND_LA_VALEUR "Cizayox ü¶û"
	playerPokemonSpecialAttack PREND_LA_VALEUR "Griffe acier"
	playerPokemonNormalAttack PREND_LA_VALEUR "Coup de griffe"
	TANT_QUE (stop==0) FAIRE
		DEBUT_TANT_QUE
		capture PREND_LA_VALEUR 0
		AFFICHER* "1-Lancer le simulateur de capture"
		AFFICHER* "2-Quitter le simulateur de capture"
		LIRE choixMenu
		AFFICHER* " "
		AFFICHER* " "
		SI (choixMenu==1) ALORS
			DEBUT_SI
			wildPokemonChoice PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,3)
			SI (wildPokemonChoice==1) ALORS
				DEBUT_SI
				wildPokemon PREND_LA_VALEUR "Ratata üêπ"
				wildPokemonPv PREND_LA_VALEUR 30
				FIN_SI
			SI (wildPokemonChoice==2) ALORS
				DEBUT_SI
				wildPokemon PREND_LA_VALEUR "Rondoudou üê∑"
				wildPokemonPv PREND_LA_VALEUR 40
				FIN_SI
			SI (wildPokemonChoice==3) ALORS
				DEBUT_SI
				wildPokemon PREND_LA_VALEUR "Roucoups üê¶‚Äç‚¨õ"
				wildPokemonPv PREND_LA_VALEUR 35
				FIN_SI
			wildPokemonPvCurrent PREND_LA_VALEUR wildPokemonPv
			AFFICHER "Un "
			AFFICHER wildPokemon
			AFFICHER* " Sauvage apparait!"
			AFFICHER* " "
			AFFICHER* "-----------------------------------------"
			AFFICHER* " "
			TANT_QUE (wildPokemonPvCurrent>0 ET capture==0) FAIRE
				DEBUT_TANT_QUE
				playerPokemonSpecialAttackDmg PREND_LA_VALEUR ALGOBOX_ALEA_ENT(10,14)
				playerPokemonNormalAttackDmg PREND_LA_VALEUR ALGOBOX_ALEA_ENT(4,7)
				AFFICHER* " "
				AFFICHER* " "
				AFFICHER* wildPokemon
				AFFICHER "PV: "
				AFFICHER* wildPokemonPvCurrent
				AFFICHER* " "
				AFFICHER* " "
				AFFICHER* " "
				AFFICHER* " "
				AFFICHER* playerPokemon
				AFFICHER "1-"
				AFFICHER* playerPokemonNormalAttack
				AFFICHER "2-"
				AFFICHER* playerPokemonSpecialAttack
				AFFICHER* "3-Lancer une pokeball"
				LIRE choixAction
				SI (choixAction==1) ALORS
					DEBUT_SI
					wildPokemonPvCurrent PREND_LA_VALEUR wildPokemonPvCurrent-playerPokemonNormalAttackDmg
					FIN_SI
				SI (choixAction==2) ALORS
					DEBUT_SI
					wildPokemonPvCurrent PREND_LA_VALEUR wildPokemonPvCurrent-playerPokemonSpecialAttackDmg
					FIN_SI
				SI (choixAction==3) ALORS
					DEBUT_SI
					pokeballChance PREND_LA_VALEUR ALGOBOX_ALEA_ENT(0,10)
					SI (wildPokemonPvCurrent>wildPokemonPv*0.7) ALORS
						DEBUT_SI
						SI (pokeballChance>=9) ALORS
							DEBUT_SI
							capture PREND_LA_VALEUR 1
							FIN_SI
						FIN_SI
						SINON
							DEBUT_SINON
							SI (wildPokemonPvCurrent>wildPokemonPv*0.4) ALORS
								DEBUT_SI
								SI (pokeballChance>=5) ALORS
									DEBUT_SI
									capture PREND_LA_VALEUR 1
									FIN_SI
								FIN_SI
								SINON
									DEBUT_SINON
									SI (wildPokemonPvCurrent>0) ALORS
										DEBUT_SI
										SI (pokeballChance>=1) ALORS
											DEBUT_SI
											capture PREND_LA_VALEUR 1
											FIN_SI
										FIN_SI
									FIN_SINON
							FIN_SINON
					SI (capture==1) ALORS
						DEBUT_SI
						AFFICHER* " "
						AFFICHER* " "
						AFFICHER "Le "
						AFFICHER wildPokemon
						AFFICHER* " est captur√©! Bravo!"
						AFFICHER* " "
						FIN_SI
						SINON
							DEBUT_SINON
							AFFICHER* " "
							AFFICHER* " "
							AFFICHER "Le "
							AFFICHER wildPokemon
							AFFICHER* " r√©siste!!"
							AFFICHER* " "
							FIN_SINON
					FIN_SI
				SI (wildPokemonPvCurrent<=0) ALORS
					DEBUT_SI
					AFFICHER "le "
					AFFICHER wildPokemon
					AFFICHER* " est KO, la capture n'est plus possible"
					AFFICHER* " "
					AFFICHER* " "
					FIN_SI
				FIN_TANT_QUE
			FIN_SI
		SI (choixMenu==2) ALORS
			DEBUT_SI
			stop PREND_LA_VALEUR 1
			FIN_SI
		FIN_TANT_QUE
FIN_ALGORITHME


5-MasterMind

FONCTIONS_UTILISEES


VARIABLES
	blanc EST_DU_TYPE NOMBRE
	mystere EST_DU_TYPE LISTE
	isMystereChecked EST_DU_TYPE LISTE
	isGuessChecked EST_DU_TYPE LISTE
	guess EST_DU_TYPE LISTE
	x EST_DU_TYPE NOMBRE
	y EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	blanc PREND_LA_VALEUR 0
	
	mystere[0] PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,6)
	mystere[1] PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,6)
	mystere[2] PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,6)
	mystere[3] PREND_LA_VALEUR ALGOBOX_ALEA_ENT(1,6)
	
		AFFICHER* "Trouvez la bonne combinaison:"

	//AFFICHER mystere[1][0]
	TANT_QUE (guess[0] != mystere[0] OU guess[1] != mystere[1] OU guess[2] != mystere[2] OU guess[3] != mystere[3]) FAIRE
		DEBUT_TANT_QUE
		
		AFFICHER* "1:üî¥--2:üü†--3:üü°--4:üü¢--5:üîµ--6:üü£"
		isMystereChecked[0] PREND_LA_VALEUR 0
		isMystereChecked[1] PREND_LA_VALEUR 0
		isMystereChecked[2] PREND_LA_VALEUR 0
		isMystereChecked[3] PREND_LA_VALEUR 0
		isGuessChecked[0] PREND_LA_VALEUR 0
		isGuessChecked[1] PREND_LA_VALEUR 0
		isGuessChecked[2] PREND_LA_VALEUR 0
		isGuessChecked[3] PREND_LA_VALEUR 0
			LIRE guess[0]
			LIRE guess[1]
			LIRE guess[2]
			LIRE guess[3]
			AFFICHER* " "
		POUR x ALLANT_DE 0 A 3
			DEBUT_POUR
			SI (guess[x]==1) ALORS
				DEBUT_SI
				AFFICHER "üî¥"
				FIN_SI
			SI (guess[x]==2) ALORS
				DEBUT_SI
				AFFICHER "üü†"
				FIN_SI
			SI (guess[x]==3) ALORS
				DEBUT_SI
				AFFICHER "üü°"
				FIN_SI
			SI (guess[x]==4) ALORS
				DEBUT_SI
				AFFICHER "üü¢"
				FIN_SI
			SI (guess[x]==5) ALORS
				DEBUT_SI
				AFFICHER "üîµ"
				FIN_SI
			SI (guess[x]==6) ALORS
				DEBUT_SI
				AFFICHER "üü£"
				FIN_SI
			FIN_POUR
			AFFICHER* " "
			
		POUR x ALLANT_DE 0 A 3
			DEBUT_POUR
			SI (guess[x]==mystere[x]) ALORS
				DEBUT_SI
				AFFICHER "‚ö´Ô∏è"
				isMystereChecked[x] PREND_LA_VALEUR 1
				isGuessChecked[x] PREND_LA_VALEUR 1
				FIN_SI
			FIN_POUR
			
		POUR x ALLANT_DE 0 A 3
			DEBUT_POUR
			POUR y ALLANT_DE 0 A 3
				DEBUT_POUR
				SI (guess[x]==mystere[y] ET isMystereChecked[y]==0 ET isGuessChecked[x]==0) ALORS
					DEBUT_SI
					AFFICHER "‚ö™Ô∏è"
					isMystereChecked[y] PREND_LA_VALEUR 1
					isGuessChecked[x] PREND_LA_VALEUR 1
					FIN_SI
				FIN_POUR
			FIN_POUR
		AFFICHER* " "
		
		FIN_TANT_QUE
FIN_ALGORITHME